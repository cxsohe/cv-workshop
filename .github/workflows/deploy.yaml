name: Deploy

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'infrastructure/**'
      - '.github/workflows/deploy.yaml'
      


env:
  IMAGE_NAME: 'ghcr.io/${{ github.repository }}'

jobs:
  build:
    name: 'Build ${{ matrix.app }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend]
      fail-fast: false
    permissions:
      actions: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: 'ghcr.io'
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Build ${{ matrix.app }} with cache and push to registry'
        uses: docker/build-push-action@v5
        with:
          push: 'true'
          tags: '${{ env.IMAGE_NAME }}/${{ matrix.app }}:latest,${{ env.IMAGE_NAME}}/${{ matrix.app }}:${{ github.sha }}'
          cache-from: 'type=registry,ref=${{ env.IMAGE_NAME }}:latest'
          cache-to: 'type=inline'
          context: '${{ matrix.app }}'

  deploy:
    name: 'Deploy using Terraform'
    runs-on: ubuntu-latest
    needs: [build]
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_revision_suffix: ${{ github.sha }}
      TF_VAR_repository_owner: ${{ github.repository_owner }}
      TF_VAR_api_key: ${{ secrets.API_KEY }}
      TF_VAR_connection_string: ${{ secrets.SUPABASE_CONNECTION_STRING }}
    defaults:
      run:
        working-directory: 'infrastructure'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Init Terraform
        run: terraform init

      - name: Run Terraform plan
        run: terraform plan

      - name: Run Terraform apply
        run: terraform apply -auto-approve
